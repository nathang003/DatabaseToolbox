<Application x:Class="ToolboxUI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ToolboxUI">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!--/ Bootstrapper Resource Dictionary /-->
                <ResourceDictionary>
                    <local:Bootstrapper x:Key="Bootstrapper"/>
                </ResourceDictionary>
                
                <!--/ Custom Application Resource Dictionary /-->
                <ResourceDictionary>
                    <!--#region Brushes -->
                    
                    <!--#region Company Colors-->
                    <SolidColorBrush
                        x:Key="blueBrush"
                        Color="#5c9ea5"/>
                    
                    <SolidColorBrush
                        x:Key="grayBrush"
                        Color="#d4d4d4"/>
                    
                    <SolidColorBrush
                        x:Key="grayTranslucentBrush"
                        Color="#d4d4d4"
                        Opacity=".8"/>
                    
                    <SolidColorBrush
                        x:Key="orangeBrush"
                        Color="#e46c04"/>
                    <!--#endregion-->
                    
                    <!--#region Palette 1-->
                    <!-- https://flatuicolors.com/palette/defo -->
                    <SolidColorBrush
                        x:Key="lightTealBrush"
                        Color="#1abc9c"/>

                    <SolidColorBrush
                        x:Key="darkTealBrush"
                        Color="#16a085"/>

                    <SolidColorBrush
                        x:Key="lightGreenBrush"
                        Color="#2ecc71"/>

                    <SolidColorBrush
                        x:Key="darkGreenBrush"
                        Color="#27ae60"/>

                    <SolidColorBrush
                        x:Key="lightBlueBrush"
                        Color="#3498db"/>

                    <SolidColorBrush
                        x:Key="darkBlueBrush"
                        Color="#2980b9"/>

                    <SolidColorBrush
                        x:Key="lightPurpleBrush"
                        Color="#9b59b6"/>

                    <SolidColorBrush
                        x:Key="darkPurpleBrush"
                        Color="#8e44ad"/>

                    <SolidColorBrush
                        x:Key="lightBlackBrush"
                        Color="#34495e"/>

                    <SolidColorBrush
                        x:Key="darkBlackBrush"
                        Color="#2c3e50"/>

                    <SolidColorBrush
                        x:Key="lightYellowBrush"
                        Color="#f1c40f"/>

                    <SolidColorBrush
                        x:Key="darkYellowBrush"
                        Color="#f39c12"/>

                    <SolidColorBrush
                        x:Key="lightOrangeBrush"
                        Color="#e67e22"/>

                    <SolidColorBrush
                        x:Key="darkOrangeBrush"
                        Color="#d35400"/>

                    <SolidColorBrush
                        x:Key="lightRedBrush"
                        Color="#e74c3c"/>

                    <SolidColorBrush
                        x:Key="darkRedBrush"
                        Color="#c0392b"/>

                    <SolidColorBrush
                        x:Key="lightWhiteBrush"
                        Color="#ecf0f1"/>

                    <SolidColorBrush
                        x:Key="darkWhiteBrush"
                        Color="#bdc3c7"/>

                    <SolidColorBrush
                        x:Key="lightGrayBrush"
                        Color="#95a5a6"/>

                    <Color
                        x:Key="darkGrayColor"
                        R="127"
                        G="140"
                        B="141"
                        A="255"/>

                    <SolidColorBrush
                        x:Key="darkGrayBrush"
                        Color="#7f8c8d"/>

                    <LinearGradientBrush
                        x:Key="darkGrayLinearGradientBrush" StartPoint="0,0" EndPoint="0,1">
                        <GradientStopCollection>
                            <GradientStop Color="Transparent" Offset="0" />
                            <GradientStop Color="{DynamicResource darkGrayColor}" Offset="0.5" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </GradientStopCollection>
                    </LinearGradientBrush>

                    <RadialGradientBrush
                        x:Key="darkGrayRadialGradientBrush">
                        <GradientStopCollection>
                            <GradientStop Color="{DynamicResource darkGrayColor}" Offset="0" />
                            <GradientStop Color="Transparent" Offset="1" />
                        </GradientStopCollection>
                    </RadialGradientBrush>
                    <!--#endregion-->
                    
                    <!--#endregion-->
                    
                    <!--#region Images-->
                    <Image 
                        x:Key="toggleOn"
                        Source=".\Images\on-button.png"
                        Width="35"
                        Height="35"
                        Stretch="Fill"/>
                    
                    <Image 
                        x:Key="toggleOff"
                        Source=".\Images\off-button.png"
                        Width="35"
                        Height="35"
                        Stretch="Fill"/>

                    <!--#endregion-->

                    <!--#region Image Brushes -->
                    <ImageBrush
                        x:Key="addBrush"
                        ImageSource=".\Images\add.png"/>
                    
                    <ImageBrush
                        x:Key="cancelBrush"
                        ImageSource=".\Images\cancel.png"/>
                    
                    <ImageBrush
                        x:Key="cancelCircleBrush"
                        ImageSource=".\Images\cancel (1).png"/>
                    
                    <ImageBrush
                        x:Key="checkedBrush"
                        ImageSource=".\Images\checked.png"/>
                    
                    <ImageBrush
                        x:Key="deleteBrush"
                        ImageSource=".\Images\delete.png"/>
                    
                    <ImageBrush
                        x:Key="downArrowBrush"
                        ImageSource=".\Images\down-arrow.png"/>
                    
                    <ImageBrush
                        x:Key="maximizeBrush"
                        ImageSource=".\Images\maximize.png"/>
                    
                    <ImageBrush
                        x:Key="menuBrush"
                        ImageSource=".\Images\menu.png"/>
                    
                    <ImageBrush
                        x:Key="minimizeBrush"
                        ImageSource=".\Images\minimize.png"/>
                    
                    <ImageBrush
                        x:Key="refreshBrush"
                        ImageSource=".\Images\refresh.png"/>
                    
                    <ImageBrush
                        x:Key="rightArrowBrush"
                        ImageSource=".\Images\next.png"/>
                    
                    <ImageBrush
                        x:Key="searchBrush"
                        ImageSource=".\Images\zoom-in.png"/>
                    
                    <ImageBrush
                        x:Key="settingsBrush"
                        ImageSource=".\Images\settings.png"/>

                    <ImageBrush
                        x:Key="toggleOffBrush"
                        ImageSource=".\Images\off-button.png"/>

                    <ImageBrush
                        x:Key="toggleOnBrush"
                        ImageSource=".\Images\on-button.png"/>

                    <ImageBrush
                        x:Key="upArrowBrush"
                        ImageSource=".\Images\up-arrow.png"/>
                    
                    <!--#endregion-->
                    
                    <!--#region Styles -->

                    <!--#region Border Styles-->

                    <Style x:Key="SectionBorder" TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="{DynamicResource darkTealBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource lightWhiteBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="CornerRadius" Value="0,10,0,10"/>
                        <Setter Property="Padding" Value="5"/>
                    </Style>

                    <Style x:Key="TooltipBorder" TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="{DynamicResource darkWhiteBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource lightWhiteBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="CornerRadius" Value="0,10,0,10"/>
                        <Setter Property="Padding" Value="5"/>
                    </Style>

                    <Style x:Key="UMLObjectBorder" TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="{DynamicResource darkWhiteBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource lightWhiteBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="CornerRadius" Value="0,10,0,10"/>
                        <Setter Property="Padding" Value="5"/>
                    </Style>
                    
                    <!--#endregion-->
                    
                    <!--#region Button Styles -->
                    <Style 
                        x:Key="appImageButtonStyle"
                        TargetType="Button">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border 
                                        Name="border"
                                        BorderBrush="Transparent"
                                        Background="{TemplateBinding Background}">
                                        <ContentPresenter
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter 
                                                TargetName="border"
                                                Property="Opacity"
                                                Value=".8"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style 
                        x:Key="appStaticButtonStyle"
                        TargetType="Button">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Margin" Value="5"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border 
                                        Name="border"
                                        BorderBrush="{DynamicResource darkBlueBrush}"
                                        Background="{DynamicResource lightBlueBrush}"
                                        CornerRadius="15"
                                        BorderThickness="2"
                                        Padding="20 5">
                                        <ContentPresenter
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter 
                                                TargetName="border"
                                                Property="Opacity"
                                                Value=".8"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter
                                                TargetName="border"
                                                Property="Background"
                                                Value="{DynamicResource lightGrayBrush}"/>
                                            <Setter
                                                TargetName="border"
                                                Property="BorderBrush"
                                                Value="{DynamicResource darkGrayBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!--#endregion-->

                    <!--#region ListBox Styles-->
                    
                    <Style x:Key="UMLListBox" TargetType="{x:Type ListBox}">
                        <Setter Property="BorderBrush" Value="{DynamicResource lightBlackBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="Background" Value="{DynamicResource lightWhiteBrush}"/>
                    </Style>

                    <Style x:Key="UMLListView" TargetType="{x:Type ListView}">
                        <Setter Property="BorderBrush" Value="{DynamicResource lightBlackBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Setter Property="Background" Value="{DynamicResource lightWhiteBrush}"/>
                    </Style>

                    <!--#endregion-->

                    <!--#region  PasswordBox Styles-->

                    <Style x:Key="ColoredPasswordBox" TargetType="{x:Type PasswordBox}">
                        <Setter Property="Background" Value="{DynamicResource lightWhiteBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource darkWhiteBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource lightBlueBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <!--#endregion-->

                    <!--#region  Tab Control Styles-->
                    <Style x:Key="ColoredTabControl" TargetType="{x:Type TabControl}">
                        <Setter Property="TabStripPlacement" Value="Left"/>
                        <Setter Property="Background" Value="{DynamicResource darkTealBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource lightWhiteBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                    </Style>

                    <Style x:Key="ColoredTabItem" TargetType="{x:Type TabItem}">
                        
                        <Setter Property="Template">
                            
                            <Setter.Value>
                                
                                <ControlTemplate TargetType="{x:Type TabItem}">

                                    <Grid>

                                        <Border x:Name="border"
                                                Margin="0"
                                                Background="{DynamicResource lightTealBrush}"
                                                BorderBrush="{DynamicResource lightWhiteBrush}"
                                                BorderThickness="2"
                                                CornerRadius="5,0,0,5">

                                            <ContentPresenter x:Name="contentSite"
                                                VerticalAlignment="Center"
                                                              HorizontalAlignment="Center"
                                                              ContentSource="Header"
                                                              RecognizesAccessKey="True"
                                                              TextBlock.FontSize="14"
                                                              TextBlock.FontWeight="Bold"
                                                              Margin="5">
                                            </ContentPresenter>

                                        </Border>

                                    </Grid>

                                    <ControlTemplate.Triggers>

                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource darkTealBrush}"/>
                                        </Trigger>

                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource darkTealBrush}"/>
                                        </Trigger>

                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource darkWhiteBrush}"/>
                                        </Trigger>

                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                                
                            </Setter.Value>
                            
                        </Setter>
                        
                    </Style>
                    <!--#endregion-->

                    <!--#region TextBlock Styles-->

                    <Style x:Key="HeaderTextBlock" TargetType="{x:Type TextBlock}">
                        <Setter Property="FontSize" Value="15"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Foreground" Value="{DynamicResource darkBlackBrush}"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>

                    <Style x:Key="TooltipHeader" TargetType="{x:Type TextBlock}">
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Foreground" Value="{DynamicResource darkBlackBrush}"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>

                    <Style x:Key="TooltipBody" TargetType="{x:Type TextBlock}">
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="MaxWidth" Value="300"/>
                        <Setter Property="Foreground" Value="{DynamicResource darkBlackBrush}"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>

                    <Style x:Key="UMLObjectHeader" TargetType="{x:Type TextBlock}">
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Foreground" Value="{DynamicResource darkBlackBrush}"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                    
                    <!--#endregion-->
                    
                    <!--#region  TextBox Styles-->

                    <Style x:Key="ColoredTextBox" TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="{DynamicResource lightWhiteBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource darkWhiteBrush}"/>
                        <Setter Property="BorderThickness" Value="2"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource lightBlueBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                    
                    <!--#endregion-->
                    
                    <!--#region Toggle Button Styles-->

                    <Style x:Key="ColoredToggleSwitch"
                           TargetType="{x:Type ToggleButton}">
                        <Setter Property="BorderBrush" Value="{DynamicResource darkGrayBrush}"/>
                        <Setter Property="IsChecked" Value="False"/>
                        <Setter Property="Background" Value="{DynamicResource lightGrayBrush}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border 
                                        Name="border"
                                        BorderBrush="{DynamicResource darkGrayBrush}"
                                        BorderThickness="2"
                                        Background="{DynamicResource lightGrayBrush}"
                                        CornerRadius="5"
                                        Padding="2">
                                        <ContentPresenter
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsChecked" Value="True"/>
                                                <Condition Property="IsEnabled" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.Setters>
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource lightGreenBrush}"/>
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource darkGreenBrush}"/>
                                            </MultiTrigger.Setters>
                                        </MultiTrigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsChecked" Value="False"/>
                                                <Condition Property="IsEnabled" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.Setters>
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource lightRedBrush}"/>
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource darkRedBrush}"/>
                                            </MultiTrigger.Setters>
                                        </MultiTrigger>
                                        
                                        <MultiTrigger>
                                            
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsChecked" Value="True"/>
                                                <Condition Property="IsEnabled" Value="False"/>
                                            </MultiTrigger.Conditions>
                                                
                                            <MultiTrigger.Setters>
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource lightGreenBrush}"/>
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource lightBlackBrush}"/>
                                            </MultiTrigger.Setters>

                                        </MultiTrigger>

                                        <MultiTrigger>

                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsChecked" Value="False"/>
                                                <Condition Property="IsEnabled" Value="False"/>
                                            </MultiTrigger.Conditions>

                                            <MultiTrigger.Setters>
                                                <Setter TargetName="border" Property="Background" Value="{DynamicResource lightRedBrush}"/>
                                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource lightBlackBrush}"/>
                                            </MultiTrigger.Setters>

                                        </MultiTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                                
                            </Setter.Value>
                        </Setter>
                    </Style>
                    
                    <!--#endregion-->
                    
                    <!--#endregion-->
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Application.Resources>
</Application>
